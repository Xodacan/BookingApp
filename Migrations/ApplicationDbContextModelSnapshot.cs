// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TennisCourtAPI.Data;

#nullable disable

namespace TennisCourtAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.0");

            modelBuilder.Entity("TennisCourtAPI.Models.Booking", b =>
                {
                    b.Property<string>("BookingId")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CourtId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("TimeSlot")
                        .HasColumnType("TEXT");

                    b.HasKey("BookingId");

                    b.HasIndex("CourtId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("TennisCourtAPI.Models.Court", b =>
                {
                    b.Property<int?>("CourtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("CourtName")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("TEXT");

                    b.HasKey("CourtId");

                    b.ToTable("Courts");

                    b.HasData(
                        new
                        {
                            CourtId = 1,
                            Address = "add1",
                            CourtName = "Court 1"
                        },
                        new
                        {
                            CourtId = 2,
                            Address = "add2",
                            CourtName = "Court 2"
                        });
                });

            modelBuilder.Entity("TennisCourtAPI.Models.Booking", b =>
                {
                    b.HasOne("TennisCourtAPI.Models.Court", "Court")
                        .WithMany("Bookings")
                        .HasForeignKey("CourtId");

                    b.Navigation("Court");
                });

            modelBuilder.Entity("TennisCourtAPI.Models.Court", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
